The 2-matrix_divided module
======================

Divides all values in the matrix by div argument

Testing import
>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Positive int matrix
>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

Negative int matrix
>>> matrix = [[-1, -2, -3], [-4, -5, -6]]
>>> matrix_divided(matrix, 3)
[[-0.33, -0.67, -1.0], [-1.33, -1.67, -2.0]]

Positive float matrix
>>> matrix = [[1.5, 2.5, 3.5], [4.5, 5.5, 6.5]]
>>> matrix_divided(matrix, 3)
[[0.5, 0.83, 1.17], [1.5, 1.83, 2.17]]

Negative float matrix
>>> matrix = [[-1.5, -2.5, -3.5], [-4.5, -5.5, -6.5]]
>>> matrix_divided(matrix, 3)
[[-0.5, -0.83, -1.17], [-1.5, -1.83, -2.17]]

Empty matrix
>>> matrix = []
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

Matrix is not a list
>>> matrix = ([1, 2], [3, 4])
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

First list is not a list
>>> matrix = [(1, 2), [3, 4]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

First list is empty
>>> matrix = [[], [3, 4]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

Second list is not a list
>>> matrix = [[1, 2], (3, 4)]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

Second list is empty
>>> matrix = [[1, 2], []]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

Size of rows of a matrix unequal
>>> matrix = [[1, 2, 3], [4, 5]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
TypeError: Each row of the matrix must have the same size

First element in the first list not an int and not a float
>>> matrix = [["hello", 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

First element in the second list not an int and not a float
>>> matrix = [[1, 2, 3], ["hello", 5, 6]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

Element as NaN
>>> matrix = [[float("nan"), 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

Element as infinity
>>> matrix = [[float("inf"), 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
ZeroDivisionError: division by zero

>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, -2)
[[-0.5, -1.0, -1.5], [-2.0, -2.5, -3.0]]

>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, "hello")
Traceback (most recent call last):
TypeError: div must be a number

>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, 5.5)
[[0.18, 0.36, 0.55], [0.73, 0.91, 1.09]]

>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, -5.5)
[[-0.18, -0.36, -0.55], [-0.73, -0.91, -1.09]]

>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, float("nan"))
Traceback (most recent call last):
TypeError: div must be a number

>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, float("inf"))
Traceback (most recent call last):
TypeError: div must be a number

>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided()
Traceback (most recent call last):
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix)
Traceback (most recent call last):
TypeError: matrix_divided() missing 1 required positional argument: 'div'

>>> matrix = [[float("-inf"), 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, 3)
Traceback (most recent call last):
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, float("-inf"))
Traceback (most recent call last):
TypeError: div must be a number

>>> matrix = [[1, 2, 3], [4, 5, 6]]
>>> matrix_divided(matrix, 3, 5)
Traceback (most recent call last):
TypeError: matrix_divided() takes 2 positional arguments but 3 were given
