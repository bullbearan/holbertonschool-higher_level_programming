>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

>>> bg = BaseGeometry()

>>> bg.integer_validator("my_int", 12)
>>> bg.integer_validator("width", 89)
>>> bg.area()
Traceback (most recent call last):
Exception: area() is not implemented
>>> bg.integer_validator("my_int", "hello")
Traceback (most recent call last):
TypeError: my_int must be an integer
>>> bg.integer_validator("my_int", 0)
Traceback (most recent call last):
ValueError: my_int must be greater than 0
>>> bg.integer_validator("my_int", -1)
Traceback (most recent call last):
ValueError: my_int must be greater than 0
>>> bg.integer_validator()
Traceback (most recent call last):
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'
>>> bg.integer_validator("my_int")
Traceback (most recent call last):
TypeError: integer_validator() missing 1 required positional argument: 'value'
>>> bg.integer_validator("hkeiglei", None)
Traceback (most recent call last):
TypeError: hkeiglei must be an integer
>>> bg.integer_validator("hello", 1.5)
Traceback (most recent call last):
TypeError: hello must be an integer
>>> bg.integer_validator("hello", [1, 2, 3])
Traceback (most recent call last):
TypeError: hello must be an integer
>>> bg.integer_validator("hello", (1, 2, 3))
Traceback (most recent call last):
TypeError: hello must be an integer
>>> bg.integer_validator("hello", {1, 2, 3})
Traceback (most recent call last):
TypeError: hello must be an integer
>>> bg.integer_validator("hello", True)
Traceback (most recent call last):
TypeError: hello must be an integer
